{"version":3,"sources":["img/logo-digital-generation.png","components/componentVisualButton.js","components/componentVisualInfoWindow.js","redux/actions/marker.js","redux/actions/actionTypes.js","redux/reducers/index.js","redux/reducers/marker.js","redux/store/index.js","redux/store/initialState.js","components/componentVisualMap.js","apiKeyGoogle.js","components/componentVisualSideBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ComponentVisualButton","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","buttonOnClick","react_default","a","createElement","type","className","onClick","name","Component","ComponentVisualInfoWindow","_Component","getMarkerData","inherits","createClass","key","value","marker","storeDirectory","filter","store","Math","round","Coordinates","lat","latLng","lng","addMarkerToStore","infoWindow","close","_this2","markerData","id","Name","Address","componentVisualButton","evt","addMarker","connect","state","objectSpread","dispatch","addMarkerToFavorites","combineReducers","markers","arguments","length","undefined","action","find","alert","concat","index","initialData","savedState","localStorage","getItem","JSON","parse","error","loadState","createStore","reducer","composeWithDevTools","applyMiddleware","thunkMiddleware","subscribe","stateToSave","stringify","setItem","console","log","saveState","getState","require","ComponentVisualMap","onGoogleApiLoad","window","google","maps","InfoWindow","content","map","Map","document","getElementById","center","zoom","storeMarker","Marker","position","title","addListener","clickedMarker","createInfoWindow","_this3","setPosition","render","es","components_componentVisualInfoWindow","open","_this4","scriptApi","src","positionScript","getElementsByTagName","parentNode","insertBefore","addEventListener","script","style","width","height","ComponentVisualSideBar","openNav","closeNav","sidebarWidth","navMargin","setState","confirm","deleteMarkerToStore","Fragment","href","markersFromStore","deleteMarker","marginLeft","logo","alt","deleteMarkerToFavorites","App","components_componentVisualSideBar","componentVisualMap","Boolean","location","hostname","match","ReactDOM","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7c799e66.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-digital-generation.8e0c234a.png\";","/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/prop-types */\r\nimport React, { Component } from 'react';\r\n\r\nclass ComponentVisualButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick() {\r\n    this.props.buttonOnClick();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <button type=\"button\" className={this.props.className} onClick={this.handleClick}>{this.props.name}</button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ComponentVisualButton;\r\n","/* eslint-disable max-len */\r\n/* eslint-disable implicit-arrow-linebreak */\r\n/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/prop-types */\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addMarkerToFavorites } from '../redux/actions/marker';\r\nimport ComponentVisualButton from './componentVisualButton';\r\nimport './css/componentVisualInfoWindow.css';\r\n\r\nexport class ComponentVisualInfoWindow extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.getMarkerData = this.getMarkerData.bind(this);\r\n  }\r\n\r\n  /* MÃ©todo que permite buscar un marcador en especifico a partir de sus coordenadas (marker)\r\n  Iguala el marcador impreso en la pantalla con el marcador que esta en el archivo Json, trayendo todos\r\n  los datos del Json */\r\n  getMarkerData(marker) {\r\n    return this.props.storeDirectory.filter(store =>\r\n      Math.round(store.Coordinates.lat * 10000000) === Math.round(marker.latLng.lat() * 10000000)\r\n      && Math.round(store.Coordinates.lng * 10000000) === Math.round(marker.latLng.lng() * 10000000))[0];\r\n  }\r\n\r\n  // AÃ±ade el marcador a favoritos y cierra el infowindow\r\n  // addMarkerToStore gatilla al reductor\r\n  addMarker(marker) {\r\n    this.props.addMarkerToStore(marker);\r\n    this.props.infoWindow.close();\r\n  }\r\n\r\n  render() {\r\n    const markerData = this.getMarkerData(this.props.marker);\r\n    return (\r\n      <div id=\"insideinfowindow\">\r\n        <h4>INFORMACIÃN TIENDA</h4>\r\n        <h5>\r\n          <strong>Nombre:</strong>\r\n          {' '}\r\n          {markerData.Name}\r\n        </h5>\r\n        <h5>\r\n          <strong>DirecciÃ³n:</strong>\r\n          {' '}\r\n          {markerData.Address}\r\n        </h5>\r\n        <h5>\r\n          <strong>Coordenadas:</strong>\r\n          {' '}\r\n          {markerData.Coordinates.lat}\r\n          ,\r\n          {' '}\r\n          {markerData.Coordinates.lng}\r\n        </h5>\r\n        <ComponentVisualButton className=\"btnadd\" name=\"Agregar a favoritos\" buttonOnClick={(evt) => { this.addMarker(markerData, evt); }} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addMarkerToStore: marker => dispatch(addMarkerToFavorites(marker)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(ComponentVisualInfoWindow);\r\n","/* eslint-disable import/prefer-default-export */\r\nimport { ADD_TO_FAVORITES, DELETE_TO_FAVORITES } from './actionTypes';\r\n\r\nexport const addMarkerToFavorites = marker => ({\r\n  type: ADD_TO_FAVORITES,\r\n  marker,\r\n});\r\n\r\nexport const deleteMarkerToFavorites = index => ({\r\n  type: DELETE_TO_FAVORITES,\r\n  index,\r\n});\r\n","/* eslint-disable import/prefer-default-export */\r\nexport const ADD_TO_FAVORITES = 'ADD_TO_FAVORITES';\r\nexport const DELETE_TO_FAVORITES = 'DELETE_TO_FAVORITES';\r\n","import { combineReducers } from 'redux';\r\nimport markers from './marker';\r\n\r\nexport default combineReducers({\r\n  markers,\r\n});\r\n","/* eslint-disable no-alert */\r\nimport { ADD_TO_FAVORITES, DELETE_TO_FAVORITES } from '../actions/actionTypes';\r\n\r\nexport default (\r\n  state = {\r\n    markers: [],\r\n  },\r\n  action,\r\n) => {\r\n  switch (action.type) {\r\n    case ADD_TO_FAVORITES:\r\n      // Evitar que se aÃ±ada una tienda repetida en los favoritos\r\n      if (state.markers.find(marker => marker.Coordinates.lat === action.marker.Coordinates.lat\r\n        && marker.Coordinates.lng === action.marker.Coordinates.lng)) {\r\n        alert('Esta tienda ya se encuentra guardada en favoritos.');\r\n        return state;\r\n      }\r\n      return {\r\n        ...state,\r\n        markers: state.markers.concat(action.marker),\r\n      };\r\n    case DELETE_TO_FAVORITES:\r\n      return {\r\n        ...state,\r\n        markers: state.markers.filter((marker, index) => {\r\n          if (action.index !== index) {\r\n            return true;\r\n          }\r\n          return false;\r\n        }),\r\n      };\r\n    default: return state;\r\n  }\r\n};\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport reducer from '../reducers';\r\nimport { loadState, saveState } from './initialState';\r\n\r\nconst initialData = loadState();\r\nconst store = createStore(\r\n  reducer,\r\n  initialData,\r\n  composeWithDevTools(\r\n    applyMiddleware(thunkMiddleware),\r\n  ),\r\n);\r\n/*\r\n  subscribe(): es una funciÃ³n del store de redus, que permite ejecutar la funciÃ³n\r\nque recibe como parÃ¡metro cada vez que ocurre un cambio de estado\r\n*/\r\nstore.subscribe(() => {\r\n  saveState(store.getState());\r\n});\r\n\r\nexport default store;\r\n","/* eslint-disable no-console */\r\n/**\r\n  loadState: carga el estado desde localStorage (sÃ³lo permite string)\r\n  saveState: guardo el estado inicial que esta en localStorage\r\n  Si encuentra un state, este debe ser convertido de string a un objeto de estado redux,\r\n  ya que localStorage solo almacena string; usando JSON.parse();\r\n */\r\nexport const loadState = () => {\r\n  try {\r\n    const savedState = localStorage.getItem('state');\r\n    if (savedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(savedState);\r\n  } catch (error) {\r\n    return undefined;\r\n  }\r\n};\r\n/**\r\n  saveState: guarda el estado en localStorage\r\n  stateToSave: almacena el state de redux como string JSON, indicando que\r\n  serÃ¡ guardado en estas condiciones\r\n  */\r\nexport const saveState = (state) => {\r\n  try {\r\n    const stateToSave = JSON.stringify(state);\r\n    localStorage.setItem('state', stateToSave);\r\n  } catch (error) {\r\n    console.log(`Error para guardar el estado: ${error}`);\r\n  }\r\n};\r\n","/* eslint-disable import/no-named-as-default */\r\n/* eslint-disable react/sort-comp */\r\n/* eslint-disable array-callback-return */\r\n/* eslint-disable no-unused-vars */\r\n\r\nimport React, { Component } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { render } from 'react-dom';\r\nimport ComponentVisualInfoWindow from './componentVisualInfoWindow';\r\nimport store from '../redux/store';\r\nimport apiKeyGoogle from '../apiKeyGoogle';\r\n\r\nconst storeDirectory = require('../store_directory.json');\r\n\r\nclass ComponentVisualMap extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.infoWindow = {};\r\n    this.onGoogleApiLoad = this.onGoogleApiLoad.bind(this);\r\n  }\r\n\r\n  /* Se ejecuta luego que se termina de cargar la libreria de google, creando el elemento mapa (Map)\r\n  Crea el elemento InfoWindow vacÃ­o\r\n  Recorre el archivo Json y carga los marcadores (marker) */\r\n  onGoogleApiLoad() {\r\n    this.infoWindow = new window.google.maps.InfoWindow({ content: '<div id=\"infowindow\" />' });\r\n    const map = new window.google.maps.Map(\r\n      document.getElementById('map'),\r\n      {\r\n        center: { lat: 19.30518, lng: -99.0615 },\r\n        zoom: 14,\r\n      },\r\n    );\r\n    storeDirectory.map((storeMarker) => {\r\n      const marker = new window.google.maps.Marker({\r\n        position: { lat: storeMarker.Coordinates.lat, lng: storeMarker.Coordinates.lng },\r\n        name: storeMarker.Name,\r\n        title: storeMarker.Address,\r\n        map,\r\n      });\r\n\r\n      marker.addListener('click', (clickedMarker) => {\r\n        this.createInfoWindow(clickedMarker, map);\r\n      });\r\n    });\r\n  }\r\n\r\n  /* Crea el elemento InfoWindow de googleMaps y le adjunta el\r\n  componentVisualInfoWindow y store de redux\r\n  - setPosition() mueve el infoWindow vacÃ­o a la posiciÃ³n del marcador seleccionado\r\n  - domready se ejecuta luego que el infowindow se mueve la posicion del marcador seleccionado,\r\n  - dando la acciÃ³n de imprimir la informaciÃ³n del marcador en el infowindow */\r\n  createInfoWindow(marker, map) {\r\n    this.infoWindow.setPosition({ lat: marker.latLng.lat(), lng: marker.latLng.lng() });\r\n    this.infoWindow.addListener('domready', (evt) => {\r\n      render(\r\n        <Provider store={store}>\r\n          <ComponentVisualInfoWindow\r\n            marker={marker}\r\n            storeDirectory={storeDirectory}\r\n            infoWindow={this.infoWindow}\r\n          />\r\n        </Provider>,\r\n        document.getElementById('infowindow'),\r\n      );\r\n    });\r\n    this.infoWindow.open(map);\r\n  }\r\n\r\n  /* Proceso asincrono, que se ejecuta cuando el componente estÃ¡ listo, permitiendo\r\n  iniciar la carga del script de google maps\r\n  crea un elemento script en el html, asociando el tipo y ruta\r\n  posteriormente, inserta el elemento en el tag creado */\r\n  componentDidMount() {\r\n    if (!window.google) {\r\n      const scriptApi = document.createElement('script');\r\n      scriptApi.type = 'text/javascript';\r\n      scriptApi.src = `https://maps.google.com/maps/api/js?key=${apiKeyGoogle}`;\r\n      const positionScript = document.getElementsByTagName('script')[0];\r\n      if (positionScript) {\r\n        positionScript.parentNode.insertBefore(scriptApi, positionScript);\r\n      }\r\n      // google.maps no se puede usar hasta que termine de ser cargado\r\n      scriptApi.addEventListener('load', (script) => {\r\n        this.onGoogleApiLoad();\r\n      });\r\n    } else {\r\n      this.onGoogleApiLoad();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section style={{ width: '100%', height: '90vh' }} id=\"map\" />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ComponentVisualMap;\r\n","const apiKeyGoogle = 'AIzaSyDe1SI1uxaNHiq2idOcYWKCIL2lFwuNLi0';\r\n\r\nexport default apiKeyGoogle;\r\n","/* eslint-disable no-alert */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable react/no-array-index-key */\r\n/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable no-script-url */\r\n/* eslint-disable class-methods-use-this */\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ComponentVisualButton from './componentVisualButton';\r\nimport { deleteMarkerToFavorites } from '../redux/actions/marker';\r\nimport './css/componentVisualSideBar.css';\r\nimport logo from '../img/logo-digital-generation.png';\r\n\r\n// export, permite probar el componente sin redux\r\nexport class ComponentVisualSideBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.openNav = this.openNav.bind(this);\r\n    this.closeNav = this.closeNav.bind(this);\r\n    // Inicializar para cuando sidebar estÃ¡ cerrado\r\n    this.state = {\r\n      sidebarWidth: '0',\r\n      navMargin: '0',\r\n    };\r\n  }\r\n\r\n  /* Se fija el ancho del panel lateral a 300px y el margen del contenido de la pÃ¡gina a 300px */\r\n  openNav() {\r\n    this.setState({\r\n      sidebarWidth: '300px',\r\n      navMargin: '300px',\r\n    });\r\n  }\r\n\r\n  /* Se fija el ancho del panel lateral a 0 y el margen del contenido de la pÃ¡gina a 0 */\r\n  closeNav() {\r\n    this.setState({\r\n      sidebarWidth: '0px',\r\n      navMargin: '0px',\r\n    });\r\n  }\r\n\r\n  deleteMarker(marker) {\r\n    if (window.confirm('Â¿EstÃ¡ seguro que desea eliminar esta tienda de sus favoritos?')) {\r\n      this.props.deleteMarkerToStore(marker);\r\n    }\r\n  }\r\n\r\n  // Se debe conectar los estilos al estado, para poder ser cambiados por una acciÃ³n de react\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <section id=\"mySidebar\" className=\"sidebar\" style={{ width: this.state.sidebarWidth }}>\r\n          <a href=\"javascript:void(0)\" className=\"closebtn\" onClick={this.closeNav}>&times;</a>\r\n          <h5>FAVORITOS</h5>\r\n          {this.props.markersFromStore.markers.map((marker, index) => (\r\n            <div className=\"favoritedata\" key={index}>\r\n              <h5>\r\n                <strong>Nombre:</strong>\r\n                {' '}\r\n                {marker.Name}\r\n              </h5>\r\n              <h5>\r\n                <strong>DirecciÃ³n:</strong>\r\n                {' '}\r\n                {marker.Address}\r\n              </h5>\r\n              <ComponentVisualButton className=\"btndelete\" name=\"Eliminar\" buttonOnClick={(evt) => { this.deleteMarker(index, evt); }} />\r\n            </div>\r\n          ))}\r\n        </section>\r\n        <nav id=\"nav\" style={{ marginLeft: this.state.navMargin }}>\r\n          <img src={logo} alt=\"Logo\" />\r\n          <ComponentVisualButton className=\"openbtn\" buttonOnClick={this.openNav} name=\"FAVORITOS\" />\r\n        </nav>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  markersFromStore: state.markers,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteMarkerToStore: index => dispatch(deleteMarkerToFavorites(index)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(ComponentVisualSideBar);\r\n","import React, { Component } from 'react';\r\nimport ComponentVisualMap from './components/componentVisualMap';\r\nimport ComponentVisualSideBar from './components/componentVisualSideBar';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <header>\r\n          <ComponentVisualSideBar />\r\n        </header>\r\n        <section>\r\n          <ComponentVisualMap />\r\n        </section>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>, document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}